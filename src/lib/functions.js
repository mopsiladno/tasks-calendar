import { get, ref, set } from 'firebase/database';

/**
 * Метод для преобразования даты в формат ISO.
 *
 * @param date дата для форматирования
 */
export function iso(date) {
    /**
     * Метод для форматирования числа в виде двухначного числа.
     *
     * Если число меньше 10, то добавляем 0 к началу числа.
     *
     * @param n число для форматирования
     */
    const pad = (n) => (n < 10 ? "0" + n : n);

    /**
     * Вернуть отформатированную в формате ISO дату.
     *
     * Для этого через дефис объединяем:
     * - полный год в виде четырехзначного числа,
     * - месяц в виде двузначного числа,
     * - день месяца в виде двузначного числа.
     */
    return (
        date.getFullYear() +
        "-" +
        pad(date.getMonth() + 1) +
        "-" +
        pad(date.getDate())
    );
}

/**
 * Получить задачи из БД.
 */
export async function getTasks(db, token, date) {
    /**
     * Путь, по которому необходимо сохранить данные в БД.
     */
    const path = `tasks/${token}/${date}`;

    /**
     * Получить задачи из БД.
     *
     * Если задачи в БД отсутствуют, то возвращаем клон задач по-умолчанию.
     *
     * Клонирование необходимо для того, чтобы не перезаписать задачи по-умолчанию
     * при последующем изменении значения, возвращенного из этой функции.
     */
    return (await get(ref(db, path))).val();
}

/**
 * Обновить задачи в БД.
 *
 * @param tasks задачи, на которые необходимо обновить
 */
export async function setTasks(db, token, date, tasks) {
    /**
     * Путь, по которому необходимо сохранить данные в БД.
     */
    const path = `tasks/${token}/${date}`;

    /**
     * Обновить задачи в БД.
     */
    return await set(ref(db, path), tasks);
}
